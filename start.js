#!/usr/bin/env node

/**
 * PHP Universal MCP Server
 * Script de inicializa√ß√£o
 * Vers√£o 1.12.0-dev
 */

// Importar a inst√¢ncia do servidor j√° configurada com todos os provedores
const server = require('./server-part2');
const ClaudePluginCreator = require('./integrations/claude/plugin-creator');

// Inicializar integra√ß√µes Claude na inst√¢ncia j√° configurada
const claudePluginCreator = new ClaudePluginCreator(server);
claudePluginCreator.registerMethods();

console.log('üöÄ PHP Universal MCP Server v1.12.0-dev');
console.log('‚úÖ Servidor iniciado com todos os provedores e integra√ß√µes');
console.log('üì° Hostinger, Shopify, WooCommerce, AWS, GCP carregados');
console.log('ü§ñ Integra√ß√£o Claude ativa');
console.log(`üîó Escutando na porta ${process.env.MCP_PORT || 7654}`);

// Gerenciar desligamento
process.on('SIGINT', () => {
  console.log('\nüõë Desligando o servidor...');
  if (server && typeof server.stop === 'function') {
    server.stop();
  }
  process.exit(0);
});

process.on('SIGTERM', () => {
  console.log('\nüõë Recebido sinal de t√©rmino. Desligando...');
  if (server && typeof server.stop === 'function') {
    server.stop();
  }
  process.exit(0);
});

process.on('uncaughtException', (error) => {
  console.error('‚ùå Erro n√£o tratado:', error);
  if (server && typeof server.stop === 'function') {
    server.stop();
  }
  process.exit(1);
});

process.on('unhandledRejection', (reason, promise) => {
  console.error('‚ö†Ô∏è Promessa rejeitada n√£o tratada:', reason);
  // N√£o finaliza o processo, apenas registra o erro
});

module.exports = { server };
